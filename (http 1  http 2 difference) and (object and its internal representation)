question 1
HTTP stands for hypertext transfer protocol, and it is the basis for almost all web applications. 
More specifically, HTTP is the method computers and servers use to request and send information. 
For instance, when someone navigates to google.com on their laptop, their web browser sends an HTTP request to the google servers for the content that appears on the page. 
Then, google servers send HTTP responses with the text, images, and formatting that the browser displays to the user.

The first usable version of HTTP was created in 1997. 
Because it went through several stages of development, this first version of HTTP was called HTTP/1.1.
This version is still in use on the web. In 2015, a new version of HTTP called HTTP/2 was created.

HTTP/2 solves several problems that the creators of HTTP/1.1 did not anticipate. In particular, HTTP/2 is much faster and more efficient than HTTP/1.1.
One of the ways in which HTTP/2 is faster is in how it prioritizes content during the loading process.


In the context of web performance, prioritization refers to the order in which pieces of content are loaded. 
Suppose a user visits a news website and navigates to an article. 
Should the photo at the top of the article load first? Should the text of the article load first? Should the banner ads load first?

Prioritization affects a webpage's load time.
For example, certain resources, like large JavaScript files, may block the rest of the page from loading if they have to load first. 
More of the page can load at once if these render-blocking resources load last.

In addition, the order in which these page resources load affects how the user perceives page load time. 
If only behind-the-scenes content (like a CSS file) or content the user can't see immediately (like banner ads at the bottom of the page) loads first, the user will think the page is not loading at all. 
If the content that's most important to the user loads first, such as the image at the top of the page, then the user will perceive the page as loading faster.

question 2

Objects are important data types in javascript. Objects are different than primitive datatypes (i.e. number, string, boolean, etc.).
Primitive data types contain one value but Objects can hold many values in form of Key: value pair. 
These keys can be variables or functions and are called properties and methods, respectively, in the context of an object.

Every object has some property associated with some value. These values can be accessed using these properties associated with them.

var myCar = new Object();

myCar.make = 'Suzuki';

myCar.model = 'Altros';

myCar.year = 1978;

myCar.wheels = 2;

After creating myCar object, the value inside the object can be accessed using keys.

i.e.

myCar.year

Output: 1978

These values can be accessed using brackets notation also.

myCar.year

Output: 1978
